<article class="row">
<section class="display-question col-md-6">
  <!-- <h4 class = "emo-q"><%# emojify(":neckbeard:") %></h4> -->
  <h4 class = "emo-q"><%= Emoji.find_by_alias("flashlight").raw %></h4>
  <h1><%= @question.title %></h1>
  <p><%= @question.body %></p>
  <%# law of demeter %>
  <%# lower dependencies between components of the system %>
  <p class= "text-muted">Category: <%= @question.category_name %></p>
  <p class = "text-muted">view count:<strong><%= @question.view_count %></strong></p>
  <%# two dollar newspaper analogy: doesn't matter how you pay%>
  <p class = "text-muted">created by <%= @question.user_full_name %>, at <%= @question.created_at.strftime("%D") %></p>

  <!-- ********************************************** -->
  <!-- Create A Like-->
  <%# like method to find the user who liked %>
  <% like = @question.like_for(current_user) %>
  <% if like %>
      <%= link_to "<span class = 'emo-unlike'>#{ Emoji.find_by_alias("thumbsup").raw}".html_safe, question_like_path(@question, like), method: :delete, class: "emo-unlike" %>
    <% else %>
      <%= link_to "#{ Emoji.find_by_alias("thumbsup").raw}", question_likes_path(@question), method: :post, class: "emo-like" %>
  <% end %>
<!-- ********************************************** -->
<!-- ********************************************** -->
<%# Favourite a Question %>
<!-- ********************************************** -->
<% favourite = @question.favourite_for(current_user) %>
<% if favourite %>
<%= link_to "Unfavourite", question_favourite_path(@question, favourite), method: :delete %>
<% else %>
<%= link_to "Favourite", question_favourites_path(@question), method: :post %>
<% end %>


<!-- ********************************************** -->
<!-- ********************************************** -->
<%# Edit or Destroy a Question %>
<!-- ********************************************** -->
<!-- ********************************************** -->
  <% if can? :edit, @question %>
  <%# if user_signed_in? && current_user == @question.user %>
  <p><%= link_to "Edit", edit_question_path(@question)  %></p>
  <% end %>
  <%# method: :delete asks rails to send a delete request instead of get which is accomplished using javascript and jQuery %>
  <% if can? :destroy, @question %>
  <p><%= link_to "Delete", question_path(@question),
                           method: :delete,
                           data: { confirm: "Are you sure?" }  %></p>
  <% end  %>
</section>
<!-- ********************************************** -->
<!-- ********************************************** -->

<!-- CREATE ANSWERS -->
<section class="create-answer col-md-6">
<h4 class="emo-ans"><%= Emoji.find_by_alias("bulb").raw %></h4>

  <%# @answer.errors.full_messages.join(", ") %>
  <% if @answer.errors.any? %>
  <ul>
    <% @answer.errors.full_messages.each do |error_msg| %>
      <li style = "color: red"><%= error_msg %></li>
    <% end %>
  </ul>
  <% end %>
  <h5>Create an Answer:</h5>
    <%= form_for [@question, @answer] do |f| %>
      <div class = "form-group">
        <%# f.label :body %>
        <%= f.text_area :body, class: "form-control" %>
      </div>
      <div class = "form-group">
        <%= f.submit "Answer", class: "btn btn-primary-outline btn-block" %>
      </div>
    <% end %>
</section>
</article>
<!-- LIST ANSWERS -->
<article class="row">
  <hr>
  <section class="list-answers col-md-6 col-md-offset-3">
    <h1 class = "text-lg-center title"><strong>Answers:</strong></h1>
    <% @question.answers.each do |ans| %>
      <p><%= ans.body %></p>
      <p class = "text-muted">(answer submitted by <%= ans.user_full_name %>)</p>
      <section class="manageables">
        <% if can? :edit, ans %>
          <p><%= link_to "Edit", edit_answer_path(ans) %></p>
        <% end %>

        <% if can? :destroy, ans %>
          <%= link_to "Delete", [@question, ans],
                       method: :delete,
                       data: { confirm: "Are you sure?!" } %>
        <% end %>
      </section>
      <hr>
    <% end %>
  </section>
</article>

<%# pass an array of parent resource and child resource to the form for. This is a better approach for creating nested resources. Works with both new and edit situations. So if an answer is not persisted, it will send POST request to question_answer_path and otherwise it will send PATCH request to _question_answer_path(@question, @answer) %>

<%# we could use this form after overiding the URL parameter - the downside is that it won't work for 'edit' situations. Only works in the create action. So it's not reusable if we decide to be able to edit an answer.  %>
<%# form_for @answer, url: question_answers_path(@question) do |f|  %>
<%#  %>
<%# end %>
